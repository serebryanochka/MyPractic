package Practice;

import java.util.Scanner;

public class Task {
    public static void main(String[] args) {
        // –õ–∏–Ω–µ–π–Ω—ãe –ø—Ä–æ–≥—Ä–∞–º–º—ã 1. –ù–∞–π—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ z = ( (a ‚Äì 3 ) * b / 2) + c.
    double a = 1;
    double b = 2;
    double z = ((a - 3) * b / 2);
        System.out.println(z);

        // 2. –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ

    double b1 = 1;
    double a1 = 2;
    double c1 = 3;
    double z1 = (b1 + Math.sqrt(Math.pow(b1,2) + 4 * a1 * c1)) / 2 * a1 - Math.pow(a1,3) + Math.pow(b1,-2);
        System.out.printf("–ó–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è: %.2f \n", z1); // —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫: %.2f - –æ—Å—Ç–∞–≤–ª—è–µ—Ç 2 —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π, –æ–∫—Ä—É–≥–ª—è–µ—Ç

       // 3. –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ (ùë†ùëñùëõ ùë• + ùëêùëúùë† ùë¶) /(ùëêùëúùë† ùë• ‚àí ùë†ùëñùëõ ùë¶) ‚àó ùë°ùëî ùë•ùë¶
        double x = 15;
        double y = 50;
        double result = (Math.sin(x) + Math.cos(y)) / (Math.cos(x) - Math.sin(y)) * Math.tan(x * y);
        System.out.printf("–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–≤–µ–Ω %.3f\n ", result);

        /* 4. –î–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ R –≤–∏–¥–∞ nnn.ddd (—Ç—Ä–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ä–∞–∑—Ä—è–¥–∞ –≤ –¥—Ä–æ–±–Ω–æ–π –∏ —Ü–µ–ª–æ–π —á–∞—Å—Ç—è—Ö).
         –ü–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ –¥—Ä–æ–±–Ω—É—é –∏ —Ü–µ–ª—É—é —á–∞—Å—Ç–∏ —á–∏—Å–ª–∞ –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–∞.*/
    double R = 222.555;
    double res = (R * 1000) % 1000 + (double) ((int) (R)) / 1000; //  555 + 0,222
        System.out.println(res);

        /* 5.	–î–∞–Ω–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –¢, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
        –í—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —á–∞—Å–∞—Ö, –º–∏–Ω—É—Ç–∞—Ö –∏ —Å–µ–∫—É–Ω–¥–∞—Ö –≤ —Å–ª–µ–¥—É—é—â–µ–π —Ñ–æ—Ä–º–µ:
        –ù–ù—á –ú–ú–º–∏–Ω SSc */
    int T = 9876;
    int H = T / 3600;
    int M = (T - (H * 3600)) / 60;
    int Sec = T - H * 3600 - M * 60;
        System.out.println(H + "—á " + M + "–º–∏–Ω " + Sec + "—Å ");

        /* 6.	–î–ª—è –¥–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∏–Ω–µ–π–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç true, –µ—Å–ª–∏ —Ç–æ—á–∫–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
         (—Ö, —É) –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∑–∞–∫—Ä–∞—à–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏, –∏ false ‚Äî –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ: */
    double x1 = 2;
    double y1 = 1;
    int Xmax = 4;
    int Xmin = -4;
    int Ymax = 4;
    int Ymin = -3;
        if (x1 >= Xmin && x1 <= Xmax && y1 >= Ymin && y1 <= Ymax) {
        System.out.println("true");
    } else {
        System.out.println("false");
    }
       /* –í–µ—Ç–≤–ª–µ–Ω–∏—è 1. –î–∞–Ω—ã –¥–≤–∞ —É–≥–ª–∞ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ (–≤ –≥—Ä–∞–¥—É—Å–∞—Ö).–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫,
       –∏ –µ—Å–ª–∏ –¥–∞, —Ç–æ –±—É–¥–µ—Ç –ª–∏ –æ–Ω –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–º. */
    double t = 70; // 1-–π —É–≥–æ–ª —Ä–∞–≤–µ–Ω t –≥—Ä–∞–¥—É—Å–æ–≤
    double t2 = 20; // 2-–π —É–≥–æ–ª —Ä–∞–≤–µ–Ω t2 –≥—Ä–∞–¥—É—Å–æ–≤
        if (180 - t - t2 > 0 && t > 0 && t2 > 0) {
        System.out.print("triangle exists, ");
        if (t + t2 == 90 || t == 90 || t2 == 90)
            System.out.println("rectangular triangle");
    } else
            System.out.println("triangle doesn't exists");

        // 2. –ù–∞–π—Ç–∏ max{min(a, b), min(c, d)}.

    int a2 = 1, b2 = 2, c2 = 3, d2 = 4;
    int minAB = Math.min(a2, b2);
    int minCD = Math.min(c2, d2);
    int max = Math.max(minAB, minCD);
        System.out.println(max);

        // 3.	–î–∞–Ω—ã —Ç—Ä–∏ —Ç–æ—á–∫–∏ –ê(—Ö1,—É1), –í(—Ö2,—É2) –∏ –°(—Ö3,—É3). –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –±—É–¥—É—Ç –ª–∏ –æ–Ω–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –Ω–∞ –æ–¥–Ω–æ–π –ø—Ä—è–º–æ–π.
        int X1 = 8, X2 = 2, X3 = 3;
        int Y1 = 2, Y2 = 4, Y3 = 6;
        if (Math.abs((X3 - X1) / (X2 - X1) - (Y3 - Y1) / (Y2 - Y1)) == 0)

            System.out.println("points belong to a line");
        else
            System.out.println("points not belong to a line");

        // 4.	–ó–∞–¥–∞–Ω—ã —Ä–∞–∑–º–µ—Ä—ã –ê, –í –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ä—Å—Ç–∏—è –∏ —Ä–∞–∑–º–µ—Ä—ã —Ö, —É, z –∫–∏—Ä–ø–∏—á–∞. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –ø—Ä–æ–π–¥–µ—Ç –ª–∏ –∫–∏—Ä–ø–∏—á
        // —á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ä—Å—Ç–∏–µ.
        double A = 12.3, B = 4.6;
    double X = 15, Y = 3, Z = 17.4;
           if ((X < A) && (Y < B)
            || (X < A) && (Z < B)
            || (Z < A) && (Y < B)
            || (Y < A) && (X < B)
            || (Z < A) && (X < B)
            || (Y < A) && (Z < B)) {
        System.out.println("brick will");
    } else
            System.out.println("brick will not");

           // 5.	–í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏...
        double x3 = -5.6;
        double function;
        if (x3 <= 3) {
        function = Math.pow(x3, 2) - 3 * x3 + 9;
    } else {
        function = 1 / (Math.pow(x3, 3) + 6);
    }
        System.out.printf("–ó–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–≤–Ω–æ %.3f \n", function); // %.3f - 3 –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π –∏ –ø–µ—Ä–µ–Ω–æ—Å –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É

        /*–¶–∏–∫–ª—ã 1.	–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –ª—é–±–æ–µ —Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.
         –ê –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å—É–º–º–∏—Ä—É–µ—Ç –≤—Å–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–∏—Å–ª–∞.
          System.out.println("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: ");
    Scanner scan = new Scanner(System.in);
    int number = scan.nextInt();
    int sum = 0;
    int count = 0;
        for (int i = 1; i <= number; i++) {
        count++;
        sum += count; //
    }
        System.out.println(sum); */



        System.out.println("8. –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ [–∞,b] c —à–∞–≥–æ–º h");

        int a3 = -3;
        int b3 = 16;
        int h = 2;
        int y4;

        for (int i = a3; i <= b3; i += h) {
            if (i > 2) {
                y4 = i;
            } else {
                y4= -1*Math.abs(i); // –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —Ö —ç—Ç–æ –∏ –µ—Å—Ç—å i —è—Å–Ω–æ
            }
            System.out.println("–ü—Ä–∏ —Ö = " + i + " —É = " + y4);
        }

        System.out.println();
    }


      /*  int a3,b3;
        a3=1;
        b3=10;
        double y4,x4,h;
        x4 = 33;
        h=2.5;
        for (x4 =a3; x4<=b3;  x4+=h) {
         if (x4 > 2) {
            y4 = x4;
        } else
            y4 = -x4;
        } System.out.println("y ="+y4);

    /*int sum1 = 0;
    int j;
        for (j = 1; j <= 100; j++) {
        sum1 = sum1 + j * j;
    }
        System.out.println(sum1);

    long multi = 1;
    int e;
    int e1;
        for (e = 1; e <= 200; e++) {
        e1 = e * e;
        multi *= e1;
    }
        System.out.println(multi);

    double sum2 = 0;
    int e2 = 5;
    int n = 1;
    double a7 = (1 / (Math.pow(2, n))) + (1 / (Math.pow(3, n)));
        while (Math.abs(a7) >= e2) {
        sum2 += a7;
        n++;
    }
        System.out.println(sum2);
*/
}
